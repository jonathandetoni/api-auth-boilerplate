// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Tenants {
  id String @id @default(uuid()) @db.Uuid @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  name String @db.VarChar(255) @unique
  description String @db.VarChar(255)

  users Users[]

  @@map("tenants")
}

model Users {
  id String @id @default(uuid()) @db.Uuid @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  email String @db.VarChar(255) @unique
  password String @db.VarChar(255)
  cpf String @db.VarChar(11) @unique
  role String @db.VarChar(50)
  typeUser TypeUsers @default(COMMON)

  tenant Tenants @relation(fields: [tenantId], references: [id])
  tenantId String @db.Uuid

  dataBasicUser DataBasicUsers?

  @@map("users")
}

model DataBasicUsers {
  id String @id @default(uuid()) @db.Uuid @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  fullname String @db.VarChar(255)
  nickname String? @db.VarChar(255)
  birthdate DateTime? @db.Date

  addresses Adresses[]
  contacts Contacts[]

  user Users @relation(fields: [userId], references: [id])
  userId String @db.Uuid @unique

  @@map("data-basic-users")
}

model Adresses {
  id String @id @default(uuid()) @db.Uuid @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  dataBasicUsers DataBasicUsers @relation(fields: [dataBasicUsersId], references: [id])
  dataBasicUsersId String @db.Uuid

  @@map("adresses")
}

model Contacts { 
  id String @id @default(uuid()) @db.Uuid @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  contactType ContactsTypes
  value String @db.VarChar(255)

  dataBasicUsers DataBasicUsers @relation(fields: [dataBasicUsersId], references: [id])
  dataBasicUsersId String @db.Uuid

  @@map("contacts")
}

enum StatusDemands { 
  NEW 
  OPEN_BUDGETS
  RECEIVED_BUDGETS
  CHOSEN_BUDGETS
  FINISHED
}

enum StatusBudgets {
  SENT
  OPEN
  REFUSED
  ACCEPTED
}

enum TypeUsers {
  USER
  ADMIN
  COMMON
  PROFESSIONAL
  ADMINISTRATOR
}

enum ContactsTypes {
  PHONE_NUMBER
  CELPHONE_NUMBER
  EMAIL
  APP_WHATSAPP
  MIDIASOCIAL_FACEBOOK
  MIDIASOCIAL_INTAGRAM
  OTHER
}